local VehicleSeat = script.Parent.VehicleSeat

local Player = VehicleSeat.Occupant

local Body = script.Parent.Parent.Body

local WheelsFold = script.Parent.Parent.Wheels

local MotorsFold = script.Parent.Parent.Motors

local DriveMotors = MotorsFold.DriveMotors
local SteerMotors = MotorsFold.SteeringMotors

local FLMotor = DriveMotors.FLDrive
local FRMotor = DriveMotors.FRDrive
local RLMotor = DriveMotors.RLDrive
local RRMotor = DriveMotors.RRDrive

local FLTurMotor = SteerMotors.FLSteer
local FRTurMotor = SteerMotors.FRSteer

local BasePart = script.Parent.Parent.BasePart
local BatterySound = Body.BatterySoundPart

local WheelRadius = 2.99 / 2

local FunctionsFold = script.Parent

local GUI = FunctionsFold.GUI

local Config = script.Parent:WaitForChild("Configuration")

local ConfigScript = require(script.Parent.Parent.ConfigurationScript)

local RunService = game:GetService("RunService")

local UserInputService = game:GetService("UserInputService")

-- Func Vals
local Speed = FunctionsFold:WaitForChild("Speed")
local PBrakeVal = FunctionsFold.PBrake
local Battery = FunctionsFold:WaitForChild("Battery")
local Gear = FunctionsFold:WaitForChild("Gear")
local MaxSpeed = FunctionsFold.MaxSPD
-- Configuration

local MaxRVRS = Config.MaxRVS

local Acceleration = Config.AccelVal

local TurningAngle = Config.TurningAng

local TurningSpeed = Config.TurningSpd

local BrakingForce = Config.BrakeForce

--Sounds Stuff (Don't Edit)
local BatMinSound = 0.6
local BatMaxSound = 1.5
local SoundMaxVelocity = ConfigScript.BatterySpecs.MaxSpeed * WheelRadius
local Sound = BatterySound:FindFirstChild("Battery", true)

RunService.Heartbeat:Connect(function()
	local speed = math.abs(BasePart.CFrame.LookVector:Dot(BasePart.AssemblyLinearVelocity))

	Sound.PlaybackSpeed = BatMinSound + (BatMaxSound - BatMinSound) * math.min(speed / SoundMaxVelocity, 1)

	Speed.Value = speed

	GUI.Value.MainFrame.Speedo.Text = Speed.Value
end)

-- Calibration
RLMotor.MotorMaxAcceleration = Acceleration.Value
RRMotor.MotorMaxAcceleration = Acceleration.Value
FRMotor.MotorMaxAcceleration = Acceleration.Value
FLMotor.MotorMaxAcceleration = Acceleration.Value
FLTurMotor.AngularSpeed = TurningSpeed.Value
FRTurMotor.AngularSpeed = TurningSpeed.Value

Gear.Changed:Connect(function(value:number)
	if Gear.Value == 1 then
		MaxSpeed.Value = ConfigScript.BatterySpecs.MaxSpeed
	elseif Gear.Value == 0 then
		MaxSpeed.Value = 0
	elseif Gear.Value == -1 then
		MaxSpeed.Value = ConfigScript.BatterySpecs.MaxRVS
	end
end)

PBrakeVal.Changed:Connect(function(value:number)
	print('PBrakeVal is',value)
end)

-- Steering
VehicleSeat.Changed:Connect(function()
	if VehicleSeat.Steer == -1 then
		FLTurMotor.TargetAngle = -TurningAngle.Value
		FRTurMotor.TargetAngle = TurningAngle.Value
	elseif VehicleSeat.Steer == 1 then
		FLTurMotor.TargetAngle = TurningAngle.Value
		FRTurMotor.TargetAngle = -TurningAngle.Value
	elseif VehicleSeat.Steer == 0 then
		FLTurMotor.TargetAngle = 0
		FRTurMotor.TargetAngle = 0
	end
	if Battery.Value == true and PBrakeVal.Value == false then
		if VehicleSeat.Throttle == -1 then
			FRMotor.AngularVelocity = 0 * VehicleSeat.ThrottleFloat
			FLMotor.AngularVelocity = 0 * VehicleSeat.ThrottleFloat
			RRMotor.AngularVelocity = 0 * VehicleSeat.ThrottleFloat
			RLMotor.AngularVelocity = 0 * VehicleSeat.ThrottleFloat
			RLMotor.MotorMaxAcceleration = BrakingForce.Value
			RRMotor.MotorMaxAcceleration = BrakingForce.Value
		elseif VehicleSeat.Throttle == 1 then
			FRMotor.AngularVelocity = MaxSpeed.Value * VehicleSeat.ThrottleFloat
			FLMotor.AngularVelocity = MaxSpeed.Value * VehicleSeat.ThrottleFloat
			RRMotor.AngularVelocity = MaxSpeed.Value * VehicleSeat.ThrottleFloat
			RLMotor.AngularVelocity = MaxSpeed.Value * VehicleSeat.ThrottleFloat
			RLMotor.MotorMaxAcceleration = Acceleration.Value
			RRMotor.MotorMaxAcceleration = Acceleration.Value
		elseif VehicleSeat.Throttle == 0 then
			FRMotor.AngularVelocity = 0
			FLMotor.AngularVelocity = 0
			RRMotor.AngularVelocity = 0
			RLMotor.AngularVelocity = 0
			RLMotor.MotorMaxAcceleration = Acceleration.Value
			RRMotor.MotorMaxAcceleration = Acceleration.Value
		end
	elseif Battery.Value == false then
		FRMotor.AngularVelocity = 0
		FLMotor.AngularVelocity = 0
		RRMotor.AngularVelocity = 0
		RLMotor.AngularVelocity = 0
		RLMotor.MotorMaxAcceleration = Acceleration.Value
		RRMotor.MotorMaxAcceleration = Acceleration.Value
	end
end)

--Driving
while true do
	wait()
end
